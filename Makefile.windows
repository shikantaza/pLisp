# Copyright 2011-2016 Rajesh Jayaprakash <rajesh.jayaprakash@pm.me>

# This file is part of pLisp.

# pLisp is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# pLisp is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with pLisp.  If not, see <http://www.gnu.org/licenses/>.

OBJS    = util.o images.o hashtable.o queue.o main.o memory.o native_compiler.o full_monty_compiler.o vm.o compiler.o ffi.o event_handlers.o ui.o indent.o help.o native_primitives.o misc.o stack.o red_black_tree.o jsonlib.o file_browser.o plisp_parser.o lex.o json_parser.o json_lex.o plisp_config.o

CC	= i686-pc-mingw32-gcc
CFLAGS	= -g -DWIN32 `pkg-config --cflags libffi` `pkg-config --cflags gtk+-3.0` `pkg-config --cflags gtksourceview-3.0` -I/cygdrive/c/temp/tcc-0.9.26 

all:	plisp.exe libplisp.dll libtest.dll

libplisp.dll:	plisp_utils_ffi.o
		$(CC) $(CFLAGS) -shared -Wl,-soname,libplisp.dll -o libplisp.dll plisp_utils_ffi.o `pkg-config --libs libffi` `pkg-config --libs gtk+-3.0`

plisp_utils_ffi.o:	src/plisp_utils_ffi.c
		$(CC) $(CFLAGS) -c src/plisp_utils_ffi.c -o plisp_utils_ffi.o

libtest.dll:	test_so.o
		$(CC) -shared -Wl,-soname,libtest.dll -o libtest.dll test_so.o

plisp.exe:	$(OBJS)
		$(CC) $(CFLAGS) $(OBJS) -o plisp.exe `pkg-config --libs libffi` `pkg-config --libs gtk+-3.0` `pkg-config --libs gtksourceview-3.0` -L/cygdrive/c/temp/tcc-0.9.26 -L/usr/i686-pc-ming32/sys-root/mingw/lib -ltcc

lex.o:	src/lex.yy.c
		$(CC) $(CFLAGS) -c src/lex.yy.c -o lex.o

src/lex.yy.c:	src/plisp.l
		flex -o src/lex.yy.c src/plisp.l

plisp_parser.o:	src/plisp_parser.c
		$(CC) $(CFLAGS) -c src/plisp_parser.c -o plisp_parser.o

src/plisp_parser.c:	src/plisp_parser.y
		bison -d -v src/plisp_parser.y -o src/plisp_parser.c

json_parser.o:	src/json_parser.c
		$(CC) $(CFLAGS) -c src/json_parser.c -o json_parser.o

src/json_parser.c:	src/json_parser.y
		bison -d -v --name-prefix=json src/json_parser.y -o src/json_parser.c

json_lex.o:	src/json.c
		$(CC) $(CFLAGS) -c src/json.c -o json_lex.o

src/json.c:	src/json.l 
		flex -P json -o src/json.c src/json.l

main.o:		src/main.c
		$(CC) $(CFLAGS) -c src/main.c -o main.o

compiler.o:	src/compiler.c
		$(CC) $(CFLAGS) -c src/compiler.c -o compiler.o

vm.o:		src/vm.c
		$(CC) $(CFLAGS) -c src/vm.c -o vm.o

util.o:		src/util.c
		$(CC) $(CFLAGS) -c src/util.c -o util.o

memory.o:	src/memory.c
		$(CC) $(CFLAGS) -c src/memory.c -o memory.o

images.o:	src/images.c
		$(CC) $(CFLAGS) -c src/images.c -o images.o

red_black_tree.o:	src/rb/red_black_tree.c
		$(CC) $(CFLAGS) -c src/rb/red_black_tree.c -o red_black_tree.o

stack.o:	src/rb/stack.c
		$(CC) $(CFLAGS) -c src/rb/stack.c -o stack.o

misc.o:		src/rb/misc.c
		$(CC) $(CFLAGS) -c src/rb/misc.c -o misc.o

ffi.o:		src/ffi.c
		$(CC) $(CFLAGS) -c src/ffi.c -o ffi.o

ui.o:		src/gui/ui.c
		$(CC) $(CFLAGS) `pkg-config --cflags gtk+-3.0` -c src/gui/ui.c -o ui.o

event_handlers.o:	src/gui/event_handlers.c
		$(CC) $(CFLAGS) `pkg-config --cflags gtk+-3.0` -c src/gui/event_handlers.c -o event_handlers.o

hash.o:		src/hash.c
		$(CC) $(CFLAGS) -c src/hash.c -o hash.o

json.o:		src/json.c
		$(CC) $(CFLAGS) -c src/json.c -o json.o

queue.o:	src/queue.c
		$(CC) $(CFLAGS) -c src/queue.c -o queue.o

hashtable.o:	src/hashtable.c
		$(CC) $(CFLAGS) -c src/hashtable.c -o hashtable.o

native_compiler.o:	src/native_compiler.c
		$(CC) $(CFLAGS) -c src/native_compiler.c -o native_compiler.o

indent.o:	src/gui/indent.c
		$(CC) $(CFLAGS) -c src/gui/indent.c -o indent.o

full_monty_compiler.o:	src/full_monty_compiler.c
		$(CC) $(CFLAGS) -c src/full_monty_compiler.c -o full_monty_compiler.o

native_primitives.o:	src/native_primitives.c
		$(CC) $(CFLAGS) -c src/native_primitives.c -o native_primitives.o

test_so.o:	src/test_so.c
		$(CC) -c src/test_so.c -o test_so.o

jsonlib.o:	src/jsonlib.c
		$(CC) $(CFLAGS) -c src/jsonlib.c -o jsonlib.o

help.o:	        src/gui/help.c
		$(CC) $(CFLAGS) -c src/gui/help.c -o help.o

file_browser.o:	src/gui/file_browser.c
		$(CC) $(CFLAGS) -c src/gui/file_browser.c -o file_browser.o

plisp_config.o:	src/plisp_config.c
		$(CC) $(CFLAGS) -c src/plisp_config.c -o plisp_config.o

plisp_parser.o	: src/plisp_parser.c src/plisp.h src/util.h
lex.o		: src/plisp_parser.h src/plisp.h
main.o		: src/plisp.h src/memory.h
compiler.o	: src/plisp.h
vm.o		: src/plisp.h src/memory.h
util.o		: src/util.h
images.o	: src/plisp.h src/memory.h src/queue.h src/json.h src/hashtable.h
ffi.o		: src/plisp.h
memory.o	: src/plisp.h src/memory.h

ui.o		: src/plisp.h

event_handlers.o	: src/plisp.h

json_parser.o	: src/json_parser.c src/json_parser.h

hashtable.o	: src/hashtable.h

native_compiler.o	: src/plisp.h

full_monty_compiler.o	: src/plisp.h

native_primitives.o	: src/plisp.h

jsonlib.o               : src/json.h

file_browser.o          : src/util.h src/json.h

plisp_config.o          : src/plisp.h

clean:
	rm -f *.o *~ src/lex.yy.c src/plisp_parser.c src/plisp_parser.h src/json.c src/json_parser.h src/json_parser.c src/plisp.output src/json_parser.output plisp.exe libplisp.dll libtest.dll *.stackdump

