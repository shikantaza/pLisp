What is pLisp?
--------------

pLisp is an integrated development environment for Lisp. While it aims to be a friendly Lisp development system for beginners, its feature-set is comprehensive enough to address the needs of a small-to-medium sized Lisp project.

What features does pLisp support?
---------------------------------
* Basic operators like CAR, CDR, and other language primitives
* Other operators and utility functions written in pLisp itself
* Exception handling in the form of '(try .. (catch ..) ..)'
* Garbage collection
* Foreign function interface
* Ability to store and load images (both at the system level and at the level of individual objects)
* Macros
* Debugger (break, resume)
* Package/Namespace system
* Continuations
* Graphical IDE with context-sensitive help, syntax colouring and autocomplete

What dialect of Lisp is pLisp based on?
---------------------------------------
pLisp is not based on any single Lisp dialect, but draws inspiration from Scheme. However, its macro system is based on Common Lisp (backquote, comma and comma-at).

Why do we need yet another Lisp system?
---------------------------------------
pLisp started out as a hobby project, an implementation of an interpreter embodying the concepts in Paul Graham's "Roots of Lisp". As its feature-set kept growing, my dissatisfaction with existing Lisp development systems and my missing the beauty, power and elegance of Smalltalk environments in these systems prompted me to make pLisp more than just a command-line interpreter and add features like a system browser, workspace, and other good stuff.

My current objective with pLisp is for it to serve as a) a friendly Lisp environment for beginners and b) an end-to-end demonstration of the construction of a Lisp-based programming language system from scratch (object system design, virtual machines and intermediate code generation, garbage collection, serialization, just-in-time compilation, exceptions/continuations, and so on). And also serve as my personal programming environment, of course.

What platforms is pLisp available on?
-------------------------------------
pLisp is available for Linux, Windows and OS X.

What about the license?
-----------------------
pLisp is licensed under GPL v3.

How do I install pLisp?
-----------------------

Linux
~~~~~

pLisp can be installed using the 'dpkg' command (sudo dpkg -i <plisp deb file>). The following dependencies need to be satisfied first (you can install these packages using the package manager of your choice):

	libgtk-3-0
	libgtksourceview-3.0-0
	libffi6
	tcc (required only for 32-bit)

Note: If you get the error "tcc: error: file '/usr/local/lib/tcc/libtcc1.a' not found" on launching pLisp after installation, create a symbolic link to this file (found in the installation directory of tcc) in /usr/local/lib/tcc. I am investigating this.

Windows
~~~~~~~

Simply unzip the downloaded zip file to a location of your choice. You will also need the GTK and GTKSourceView packages for Windows, which can be installed using MSY2 (www.msys2.org) and pacman. For example (from an MSYS2 shell):

        pacman -S mingw-w64-i686-gtk3
        pacman -S mingw-w64-i686-gtksourceview3

Before running pLisp, ensure that the PATH environment variable has been updated to reflect the location of the MSYS2 DLLs. For example

       set PATH=%path%;c:\msys32\mingw32\bin

OS X
~~~~

Double-click the downloaded .DMG file and drag the pLisp application to the directory of your choice (typically 'Applications'). You can then run pLisp as you would any other OS X application (from the Launcher, Spotlight, and so on). Please note that this will launch pLisp in the current user's home directory, so if you would like automatic opening of an image on startup, you should create/save the image as 'plisp.image' in your home directory.

How do I report bugs and other issues?
--------------------------------------
You can email me at rajesh dot jayaprakash at gmail dot com, or use the ‘Issues’ feature in Github.

Where is the documentation?
---------------------------
Online help is available within pLisp, a user manual (https://github.com/shikantaza/pLisp/raw/master/doc/pLisp_User_Manual.pdf) and a language reference document (http://htmlpreview.github.com/?https://github.com/shikantaza/pLisp/blob/master/doc/help.html) are also available. I have some blog posts (http://shikantaza.blogspot.com/2013/04/building-lisp-interpreter-from-scratch.html) that talk about pLisp internals. I may expand these posts into a developers' manual in the future.

Installing pLisp From Source
----------------------------

Linux - 32-bit
~~~~~~~~~~~~~~
You will need autoconf, automate, libtool, and GCC to install pLisp. In addition, the following dependencies need to be taken care of:

* Flex and Bison
* The GTK+ 3.0 (http://www.gtk.org/) development package (libgtk-3-dev)
* The GtkSourceview3 (https://wiki.gnome.org/Projects/GtkSourceView) development package (libgtksourceview-3.0-dev)
* Tiny C Compiler (http://bellard.org/tcc/) (tcc and libtcc-dev)
* The libffi (https://sourceware.org/libffi/) package (libffi6)
* The Boehm Garbage Collector (https://www.hboehm.info/gc/gc_source/)

All these packages can be installed using the package manager that comes with your distro or from the package's home page.

To build and install pLisp, type './configure', 'make', and 'sudo make install'.

Linux - 64-bit
~~~~~~~~~~~~~~
You will need autoconf, automate, libtool, GCC, and g++ to install pLisp. In addition, the following dependencies need to be taken care of:

* Flex and Bison
* The GTK+ 3.0 (http://www.gtk.org/) development package (libgtk-3-dev)
* The GtkSourceview3 (https://wiki.gnome.org/Projects/GtkSourceView) development package (libgtksourceview-3.0-dev)
* LLVM/Clang (http://releases.llvm.org/download.html#8.0.0)
* The libffi (https://sourceware.org/libffi/) package (libffi6)
* The Boehm Garbage Collector (https://www.hboehm.info/gc/gc_source/)

All these packages can be installed using the package manager that comes with your distro or from the package's home page.

To build and install pLisp, type './configure LLVMDIR=<llvmdir>' (where <llvmdir> is the directory where LLVM/Clang is installed), 'make', and 'sudo make install'.

OS X
~~~~

* Install pkg-config using Homebrew (http://brew.sh)  

* Install GTK3 using the jhbuild system (https://wiki.gnome.org/Projects/GTK+/OSX/Building):

    ./gtk-osx-build-setup.sh
    jhbuild bootstrap
    jhbuild build meta-gtk-osx-bootstrap meta-gtk-osx-gtk3

* Install GtkSourceView3, again using jhbuild:

    jhbuild build gtksourceview3

* Install LLVM/Clang using the DMG file from the LLVM website (http://releases.llvm.org/download.html#8.0.0)

* Install the Boehm Garbage Collector (https://www.hboehm.info/gc/gc_source/) using './configure; make; sudo make install'.

* Install pLisp by entering into a jhbuild shell and typing './configure LLVMDIR=<llvmdir>' (where <llvmdir> is the directory where LLVM/Clang is installed), 'make', and 'sudo make install' at the command line after navigating to the directory to which you downloaded/extracted the pLisp files.

Windows
~~~~~~~
* Install MSYS2 (www.msys2.org)

* Install gcc, make, flex, bison, pkg-config, GTK3, GtkSourceView3 using the pacman utility from an MSYS2 shell:

    pacman -S <package name>

* Install the  Tiny C Compiler (http://bellard.org/tcc/). You will have to do it the './configure; make; sudo make install' way.

* Install the Boehm Garbage Collector (https://www.hboehm.info/gc/gc_source/) using './configure; make; sudo make install'.

* Install pLisp from the MSYS2 shell by './configure', 'make' and 'sudo make install' at the command line after navigating to the directory to which you downloaded/extracted the pLisp files.

Note: pLisp can be installed on Cygwin; however, issues with compiling TCC on Cygwin 	make this quite cumbersome.

